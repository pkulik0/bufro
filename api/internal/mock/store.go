// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/pkulik0/bufro/api/internal/store (interfaces: Store)
//
// Generated by this command:
//
//	mockgen -destination=../mock/store.go -package=mock . Store
//

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	reflect "reflect"

	model "github.com/pkulik0/bufro/api/internal/model"
	gomock "go.uber.org/mock/gomock"
)

// MockStore is a mock of Store interface.
type MockStore struct {
	ctrl     *gomock.Controller
	recorder *MockStoreMockRecorder
}

// MockStoreMockRecorder is the mock recorder for MockStore.
type MockStoreMockRecorder struct {
	mock *MockStore
}

// NewMockStore creates a new mock instance.
func NewMockStore(ctrl *gomock.Controller) *MockStore {
	mock := &MockStore{ctrl: ctrl}
	mock.recorder = &MockStoreMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockStore) EXPECT() *MockStoreMockRecorder {
	return m.recorder
}

// CreateBuf mocks base method.
func (m *MockStore) CreateBuf(arg0 context.Context, arg1 *model.Buf) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateBuf", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateBuf indicates an expected call of CreateBuf.
func (mr *MockStoreMockRecorder) CreateBuf(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateBuf", reflect.TypeOf((*MockStore)(nil).CreateBuf), arg0, arg1)
}

// GetBuf mocks base method.
func (m *MockStore) GetBuf(arg0 context.Context, arg1 string) (*model.Buf, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetBuf", arg0, arg1)
	ret0, _ := ret[0].(*model.Buf)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetBuf indicates an expected call of GetBuf.
func (mr *MockStoreMockRecorder) GetBuf(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetBuf", reflect.TypeOf((*MockStore)(nil).GetBuf), arg0, arg1)
}
